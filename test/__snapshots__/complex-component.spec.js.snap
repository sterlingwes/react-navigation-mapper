// Bun Snapshot v1, https://goo.gl/fbAQLP

exports[`complex component w/ nav call should remove everything except the component function and nav call 1`] = `
"// @ts-nocheck
import { Image, StyleSheet, TouchableOpacity, View } from "react-native";
import { useNavigation } from "@react-navigation/native";
import { NativeStackNavigationProp } from "@react-navigation/native-stack";

export const InlineReply = ({
  inReplyToId,
}: {
  inReplyToId: string;
  replyToHandles: string[];
  onlyReply?: boolean;
  onSent?: () => void;
}) => {
  const navigation = useNavigation<NativeStackNavigationProp<any>>();

  const onPressReply = () => {
    setTimeout(() => {
      inputRef.current?.focus();
    }, 10);
  };

  const onLeaveInput = () => {};

  return (
    <View style={styles.container}>
      <Box pb={25}>
        <ReplyLine visible height={15} />
        {activeUser && (
          <Image
            source={{
              uri: activeUser?.avatar_static,
            }}
            style={[styles.userAvatar, replying && styles.userAvatarReplying]}
          />
        )}
      </Box>
      <View style={styles.rightCol}>
        {replying ? (
          <>
            <Type style={styles.yourReply} scale="S" semiBold>
              Your reply:
            </Type>
            <Input
              ref={(ref) => (inputRef.current = ref)}
              scale="S"
              style={styles.input}
              placeholder="Say something!"
              onChangeText={setTextValue}
              onBlur={onLeaveInput}
              value={textValue}
              multiline
            />
          </>
        ) : (
          <>
            <TouchableOpacity
              activeOpacity={0.5}
              style={styles.replyBtn}
              onPress={onPressReply}
            >
              <Type color={getColor("baseAccent")}>Reply</Type>
            </TouchableOpacity>
            <ExternalLink
              style={styles.externalLinkIconButton}
              color={getColor("primary")}
              onPress={() =>
                navigation.navigate("Compose", {
                  inReplyToId,
                  routeTime: Date.now(),
                })
              }
            />
          </>
        )}
      </View>
    </View>
  );
};
"
`;
